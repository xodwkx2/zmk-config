/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1      &kp N2       &kp N3      &kp N4       &kp N5                                  &kp N6    &kp N7      &kp N8       &kp N9      &kp N0          &kp GRAVE
&kp ESC    &kp Q       &kp W        &kp E       &kp R        &kp T                                   &kp Y     &kp U       &kp I        &kp O       &kp P           &kp GRAVE
&kp TAB    &mt LSHFT A  &mt LGUI S  &mt LALT D  &mt LCTRL F  &kp G                                   &kp H     &mt RCTRL J &mt RALT K  &mt RGUI L  &mt RSHFT SEMI  &kp SQT
&kp LSHFT  &kp Z       &kp X        &kp C       &kp V        &kp B         &kp LBKT     &kp RBKT     &kp N     &kp M       &kp COMMA    &kp DOT     &kp SLASH     &kp RSHFT
                                    &none       &mo 1        &mt LGUI TAB  &kp SPACE    &kp ENTER    &kp BSPC  &mo 2       &none
            >;
        };

        lower_layer {
            bindings = <
&none          &none  &none                              &none                                   &none            &none                                         &none      &none      &none       &none     &none          &none
&kp LC(LG(Q))  &none  &none                              &kp UP_ARROW                            &none            &none                                         &none      &none      &kp INSERT  &kp HOME  &kp PAGE_UP    &none
&trans         &none  &kp LEFT_ARROW                     &kp DOWN_ARROW                          &kp RIGHT_ARROW  &none                                         &kp MINUS  &kp EQUAL  &kp DEL     &kp END   &kp PAGE_DOWN  &trans
&trans         &none  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &none            &kp LS(LG(NUMBER_4))  &out OUT_TOG    &trans  &trans     &none      &none       &kp PIPE  &kp BACKSLASH  &trans
                                                         &trans                                  &trans           &kp BACKSPACE         &kp ENTER       &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                     &trans      &trans    &kp INS     &kp HOME                           &kp PG_UP                               &kp C_VOL_UP
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &trans      &trans    &kp DEL     &kp END                            &kp PG_DN                               &kp C_VOL_DN
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &trans      &kp LEFT  &kp DOWN    &kp UP                             &kp RIGHT                               &kp K_MUTE
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &trans
                        &trans   &trans   &trans   &trans    &trans  &trans      &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &none     &none   &none     &none     &none                        &none      &none     &none      &none                 &none                  &none
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9                &kp N0                 &trans
&trans  &trans    &trans  &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans                &trans                 &trans
                          &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans
            >;
        };
    };
};
